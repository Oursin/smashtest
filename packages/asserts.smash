// ***************************************
//  Hooks
// ***************************************

*** Before Everything {
    let chai = i('chai');
    let chaiSubset = i('chai-subset');
    let chaiSubsetInOrder = i('chai-subset-in-order');

    chai.use(chaiSubset);
    chai.use(chaiSubsetInOrder);

    let expect = chai.expect;
    let assert = chai.assert;

    p("expect", expect);
    p("assert", assert);
}

// ***************************************
//  Functions
// ***************************************

* Verify {{a}} equals {{b}} {
    try {
        expect(a).to.equal(b);
    }
    catch(e) {
        e.continue = true;
        throw e;
    }
}

* Verify {{a}} == {{b}} {
    try {
        expect(a).to.equal(b);
    }
    catch(e) {
        e.continue = true;
        throw e;
    }
}

* Verify {{a}} is greater than {{b}} {
    try {
        expect(a).to.be.above(b);
    }
    catch(e) {
        e.continue = true;
        throw e;
    }
}

* Verify {{a}} > {{b}} {
    try {
        expect(a).to.be.above(b);
    }
    catch(e) {
        e.continue = true;
        throw e;
    }
}

* Verify {{a}} is greater than or equal to {{b}} {
    try {
        expect(a).to.be.at.least(b);
    }
    catch(e) {
        e.continue = true;
        throw e;
    }
}

* Verify {{a}} >= {{b}} {
    try {
        expect(a).to.be.at.least(b);
    }
    catch(e) {
        e.continue = true;
        throw e;
    }
}

* Verify {{a}} is less than {{b}} {
    try {
        expect(a).to.be.below(b);
    }
    catch(e) {
        e.continue = true;
        throw e;
    }
}

* Verify {{a}} < {{b}} {
    try {
        expect(a).to.be.below(b);
    }
    catch(e) {
        e.continue = true;
        throw e;
    }
}

* Verify {{a}} is less than or equal to {{b}} {
    try {
        expect(a).to.be.at.most(b);
    }
    catch(e) {
        e.continue = true;
        throw e;
    }
}

* Verify {{a}} <= {{b}} {
    try {
        expect(a).to.be.at.most(b);
    }
    catch(e) {
        e.continue = true;
        throw e;
    }
}
