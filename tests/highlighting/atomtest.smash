Function here
    Function here   // comment here
        Textual step 'non // comment string' -
            // comment on its own line

            Manual step -M // comment

            To-Do step -T
                Stuff under the to-do step...

            Step block one -
            Step block two -
            Step block three -

                Under step block -

            ..
            Sequential step block one -
            Sequential step block two -
            Sequential step block three -

                Under step block -

            Sequential step 'string' .. - //comment

                Sequential one -
                    Sequential two -

                Sequential three -

            $ IsOnly step -
                IsOnly step $ -
                    ~ Debug step // comment
                        Debug step + ~ - //comment

                ~ Debug code {var} 'string' block {
                }
                    Debug code block ~ {
                    }
                        Non-debug ~ step

            -T -M - + .. # .? Non-Debug Identifiers?. -T -M - + .. # .?

            Code block {
                throw new Error("oops");
            }

* Function here
    {global var}='something'
        {{local var}}="something else here {var}", {{local var2}} = "something {var inside string}"
            {var} = [ 1st 'Login' box near 'title' {var} ]
                {escaping} = outside 'single\'\\\'quote\n' outside "double\"quote\\\"" outside [ "element\"" 'finder\'' \] ] outside
                    {escaping}=outside 'something' outside 'something else' outside
                        {escaping}=outside "something" outside "something else" outside
                            {escaping}=outside [something] outside [something else] outside

* Other function {{var}} 'string' {
    // code block
    let x = 5 + 5;
    setTimeout(() => {
        console.log("something");
    }, 1000);

    return new Object();
}

.. * Func - .?

*** Before every branch {
    throw new Error("oops");
}

*** AFTER every Branch {
    throw new Error("oops");
}

*** Before  every  step {
    throw new Error("oops");
}

    *** After every step {
        throw new Error("oops");
    }

*** Before Everything  {
    throw new Error("oops");
}

*** After Everything {
    throw new Error("oops");
}

*** Invalid hook name {
    throw new Error("oops");
}
